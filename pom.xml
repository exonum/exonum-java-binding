<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.exonum.binding</groupId>
  <artifactId>exonum-java-binding-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Exonum Java Binding Parent</name>
  <url>https://github.com/exonum/exonum-java-binding</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.compiler.source>8</java.compiler.source>
    <java.compiler.target>8</java.compiler.target>
    <!-- Enables Java assertions, used in unit and integration tests -->
    <java.vm.assertionFlag>-ea:com.exonum.binding...</java.vm.assertionFlag>

    <assertj.version>3.9.1</assertj.version>
    <checkstyle.configLocation>${project.basedir}/checkstyle.xml</checkstyle.configLocation>
    <checkstyle.severity>warning</checkstyle.severity>
    <guice.version>4.1.0</guice.version>
    <log4j.version>2.10.0</log4j.version>
    <hamcrest.version>2.0.0.0</hamcrest.version>
    <junit.version>4.12</junit.version>
    <powermock.version>1.7.1</powermock.version>
    <mockito-core.version>2.8.47</mockito-core.version>
    <guava.version>24.0-jre</guava.version>
    <vertx.version>3.5.1</vertx.version>
  </properties>

  <build>
     <pluginManagement>
       <plugins>
         <!-- Use Error Prone Compiler by default -->
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-compiler-plugin</artifactId>
           <version>3.6.2</version>
           <configuration>
             <!-- Enables Error Prone (http://errorprone.info/docs) during compilation. -->
             <compilerId>javac-with-errorprone</compilerId>
             <showWarnings>true</showWarnings>
             <forceJavacCompilerUse>true</forceJavacCompilerUse>
             <source>${java.compiler.source}</source>
             <target>${java.compiler.target}</target>
           </configuration>
           <dependencies>
             <dependency>
               <groupId>org.codehaus.plexus</groupId>
               <artifactId>plexus-compiler-javac-errorprone</artifactId>
               <version>2.8.2</version>
             </dependency>
             <!-- override plexus-compiler-javac-errorprone's dependency on
                  Error Prone with the latest version -->
             <dependency>
               <groupId>com.google.errorprone</groupId>
               <artifactId>error_prone_core</artifactId>
               <version>2.0.21</version>
             </dependency>
           </dependencies>
         </plugin>

         <!-- Checkstyle plugin is run during validate phase (before javac) -->
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-checkstyle-plugin</artifactId>
           <version>2.17</version>
           <configuration>
             <configLocation>${checkstyle.configLocation}</configLocation>
             <propertyExpansion>checkstyle.severity=${checkstyle.severity}</propertyExpansion>
             <linkXRef>false</linkXRef>
           </configuration>
           <executions>
             <execution>
               <id>validate</id>
               <phase>validate</phase>
               <configuration>
                 <encoding>UTF-8</encoding>
                 <consoleOutput>true</consoleOutput>
                 <failsOnError>true</failsOnError>
                 <includeTestSourceDirectory>true</includeTestSourceDirectory>
               </configuration>
               <goals>
                 <goal>check</goal>
               </goals>
             </execution>
           </executions>
           <dependencies>
             <dependency>
               <groupId>com.puppycrawl.tools</groupId>
               <artifactId>checkstyle</artifactId>
               <version>8.2</version>
             </dependency>
           </dependencies>
         </plugin>

         <plugin>
           <artifactId>maven-enforcer-plugin</artifactId>
           <version>3.0.0-M1</version>
         </plugin>

         <!-- Use newer version of the Surefire plugin by default -->
         <plugin>
           <artifactId>maven-surefire-plugin</artifactId>
           <version>2.20</version>
         </plugin>

         <plugin>
           <artifactId>maven-dependency-plugin</artifactId>
           <version>3.0.2</version>
         </plugin>

         <plugin>
           <artifactId>maven-clean-plugin</artifactId>
           <version>3.0.0</version>
         </plugin>

         <!-- You may explicitly run `mvn spotbugs:spotbugs` from the command line,
              but itâ€™s not bound to any phases in the default profile.
              See: https://spotbugs.readthedocs.io/en/latest/maven.html
            -->
         <plugin>
           <groupId>com.github.spotbugs</groupId>
           <artifactId>spotbugs-maven-plugin</artifactId>
           <version>3.1.2</version>
         </plugin>
       </plugins>
     </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.5,)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <!-- See ECR-521 -->
                  <version>[1.8, 9)</version>
                </requireJavaVersion>
                <requireOS>
                  <family>!windows</family>
                  <message>Java Binding cannot be built on Windows at the moment.
                           You are welcome to hack on ECR-446 and ECR-587!</message>
                </requireOS>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- A build profile for a build performed on a CI server:
            - Fails if the code has style issues
     -->
    <profile>
      <id>ci-build</id>
      <properties>
        <checkstyle.severity>error</checkstyle.severity>
      </properties>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
        <scope>compile</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${log4j.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>java-hamcrest</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito-core.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito2</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Shared test dependencies of all sub-modules. -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>java-hamcrest</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <modules>
    <module>exonum-java-binding-bom</module>
    <module>exonum-java-testing</module>
    <module>exonum-java-proofs</module>
    <module>exonum-java-binding-core</module>
    <module>exonum-java-binding-fakes</module>
    <module>exonum-java-binding-qa-service</module>
    <module>exonum-java-binding-cryptocurrency-demo</module>
    <module>exonum-java-binding-service-archetype</module>
  </modules>
</project>
