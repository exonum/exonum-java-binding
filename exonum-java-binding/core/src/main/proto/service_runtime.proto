/*
 * Copyright 2018 The Exonum Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package exonum.java.runtime;

option java_package = "com.exonum.binding.core.runtime";
option java_outer_classname = "ServiceRuntimeProtos";

// State hashes of the service runtime.
message ServiceRuntimeStateHashes {
  // Hashes representing the state of the runtime itself (e.g., its
  // internal indexes).
  repeated bytes runtime_state_hashes = 1;
  // State hashes of each active service in the runtime.
  //
  // Note that we don't use a map to preserve the order of entries.
  repeated ServiceStateHashes service_state_hashes = 2;
}

// State hashes of a single service.
message ServiceStateHashes {
  // Service instance numeric identifier.
  uint32 instance_id = 1;
  // Service state hashes.
  repeated bytes state_hashes = 2;
}

/* Java ServiceRuntime deploy arguments, specified in the deploy request
 * transaction. Currently only a single protocol is supported:
 * loading an artifact from a file. */
message DeployArguments {

  /* A name of the service artifact file located in the directory
   * for storing Java service artifacts. */
  string artifact_filename = 1;
}
