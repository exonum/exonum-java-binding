<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.exonum.binding</groupId>
    <artifactId>exonum-java-binding-parent</artifactId>
    <version>0.10.0-SNAPSHOT</version>
  </parent>

  <artifactId>exonum-java-binding-common</artifactId>
  <version>0.10.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Exonum Java Binding: Common</name>
  <description>
    A common library module for the Exonum core and Java clients,
    providing Exonum proofs, hashing and cryptographic operations,
    and serialization support.
  </description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.compiler.release>${java.compiler.clientRelease}</java.compiler.release>
    <lazysodium-java.version>4.2.5</lazysodium-java.version>
    <auto-value.version>1.7</auto-value.version>
    <jsonpath.version>2.4.0</jsonpath.version>
    <protobuf.python.deployArguments.outputDirectory>
      ${project.parent.basedir}/exonum_launcher_java_plugins/exonum_java_runtime_plugin/proto
    </protobuf.python.deployArguments.outputDirectory>
    <protobuf.python.service.outputDirectory>
      ${project.parent.basedir}/exonum_launcher_java_plugins/exonum_instance_configuration_plugin/proto
    </protobuf.python.service.outputDirectory>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.exonum.messages</groupId>
      <artifactId>exonum-messages</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>com.goterl.lazycode</groupId>
      <artifactId>lazysodium-java</artifactId>
      <version>${lazysodium-java.version}</version>
    </dependency>

    <dependency>
      <groupId>co.libly</groupId>
      <artifactId>resource-loader</artifactId>
      <version>1.3.8-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.auto.value</groupId>
      <artifactId>auto-value-annotations</artifactId>
      <version>${auto-value.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.auto.value</groupId>
      <artifactId>auto-value</artifactId>
      <version>${auto-value.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.ryanharter.auto.value</groupId>
      <artifactId>auto-value-gson-runtime</artifactId>
    </dependency>

    <dependency>
      <groupId>com.ryanharter.auto.value</groupId>
      <artifactId>auto-value-gson-extension</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.ryanharter.auto.value</groupId>
      <artifactId>auto-value-gson-factory</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.exonum.binding</groupId>
      <artifactId>exonum-java-testing</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava-testlib</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>nl.jqno.equalsverifier</groupId>
      <artifactId>equalsverifier</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path-assert</artifactId>
      <version>${jsonpath.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <!-- lazysodium-java is fetched from JCenter -->
    <repository>
      <id>jcenter</id>
      <url>https://jcenter.bintray.com/</url>
    </repository>
    <!-- resource-loader is fetched from Jitpack -->
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
          <!-- Compile protobuf description of Java service runtime deploy arguments
               to Python for exonum_java_runtime_plugin -->
          <execution>
            <id>protobuf-compile-python-deploy-arguments</id>
            <goals>
              <goal>compile-python</goal>
            </goals>
            <configuration>
              <outputDirectory>${protobuf.python.deployArguments.outputDirectory}</outputDirectory>
              <includes>
                <include>exonum/java/deploy_arguments.proto</include>
              </includes>
            </configuration>
          </execution>
          <!-- Compile protobuf description of Java service runtime deploy arguments
               to Python for exonum_instance_configuration_plugin -->
          <execution>
            <id>protobuf-compile-python-service-configuration</id>
            <goals>
              <goal>compile-python</goal>
            </goals>
            <configuration>
              <outputDirectory>${protobuf.python.service.outputDirectory}</outputDirectory>
              <includes>
                <include>exonum/java/service.proto</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>${project.parent.basedir}/../checkstyle.xml</configLocation>
          <suppressionsLocation>${project.basedir}/checkstyle-suppressions.xml</suppressionsLocation>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>
            ${jacoco.args}
            ${java.vm.assertionFlag}
          </argLine>
          <excludedGroups>${excludeTags}, forked</excludedGroups>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <argLine>
            ${jacoco.it.args}
            ${java.vm.assertionFlag}
          </argLine>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <groups>forked</groups>
          <!-- Run each test class in its own VM -->
          <reuseForks>false</reuseForks>
        </configuration>
        <executions>
          <execution>
            <id>run-forked-its</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
    </plugins>
    <extensions>
      <!-- Use an extension that sets the OS classifier, required to locate
           the correct protoc executable -->
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${os-maven-plugin.version}</version>
      </extension>
    </extensions>
  </build>
</project>
