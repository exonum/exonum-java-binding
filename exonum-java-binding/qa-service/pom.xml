<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.exonum.binding</groupId>
    <artifactId>exonum-java-binding-parent</artifactId>
    <version>0.10.0-SNAPSHOT</version>
  </parent>

  <artifactId>exonum-java-binding-qa-service</artifactId>
  <version>0.10.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Exonum Java Binding: QA Java service</name>
  <description>A simple Exonum Java service for QA purposes.</description>

  <properties>
    <checkstyle.configLocation>${project.parent.basedir}/../checkstyle.xml</checkstyle.configLocation>
    <ejb-core.nativeLibPath>${project.parent.basedir}/core/rust/target/debug</ejb-core.nativeLibPath>
    <!-- Service Artifact properties -->
    <exonum.javaRuntimeId>1</exonum.javaRuntimeId>
    <exonum.artifactName>${project.groupId}/${project.artifactId}</exonum.artifactName>
    <exonum.artifactVersion>${project.version}</exonum.artifactVersion>
    <exonum.artifactId>${exonum.javaRuntimeId}:${exonum.artifactName}:${exonum.artifactVersion}
    </exonum.artifactId>
    <exonum.artifactFileName>${project.artifactId}-${project.version}-artifact
    </exonum.artifactFileName>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.exonum.binding</groupId>
        <artifactId>exonum-java-binding-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>com.exonum.binding</groupId>
      <artifactId>exonum-java-binding-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.exonum.binding</groupId>
      <artifactId>exonum-time-oracle</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <classifier>no_aop</classifier>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.pf4j</groupId>
      <artifactId>pf4j</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>nl.jqno.equalsverifier</groupId>
      <artifactId>equalsverifier</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web-client</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-junit5</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.exonum.binding</groupId>
      <artifactId>exonum-java-testing</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.exonum.binding</groupId>
      <artifactId>exonum-testkit</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <suppressionsLocation>${project.basedir}/checkstyle-suppressions.xml
          </suppressionsLocation>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <protocArtifact>
                com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
              </protocArtifact>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Exclude integration tests as they require a `package`d artifact
               and some special configuration. -->
          <excludedGroups>integration</excludedGroups>
          <argLine>
            ${jacoco.args}
            ${java.vm.assertionFlag}
          </argLine>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!-- Use tag-based filtering: include all the *Test.java files that have 'integration'
               tag. -->
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <groups>integration</groups>
          <systemPropertyVariables>
            <it.artifactsDir>${project.build.directory}</it.artifactsDir>
            <it.artifactFilename>${exonum.artifactFileName}.jar</it.artifactFilename>
            <it.exonumArtifactId>${exonum.artifactId}</it.exonumArtifactId>
          </systemPropertyVariables>
          <argLine>
            ${jacoco.it.args}
            -Djava.library.path=${ejb-core.nativeLibPath}
            ${java.vm.assertionFlag}
          </argLine>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>package-service-artifact</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <finalName>${exonum.artifactFileName}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <!-- Do not use the produced artifact jar file as a main jar
               i.e. do not install it in the local repo -->
          <attach>false</attach>
          <archive>
            <manifestEntries>
              <Plugin-Id>${exonum.artifactId}</Plugin-Id>
              <Plugin-Version>${exonum.artifactVersion}</Plugin-Version>
              <Plugin-Provider>${project.groupId}</Plugin-Provider>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <!-- Skip the deployment of internal module as it is inherited from parent pom -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
    <extensions>
      <!-- Use an extension that sets the OS classifier, required to locate
           the correct protoc executable -->
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${os-maven-plugin.version}</version>
      </extension>
    </extensions>
  </build>
</project>
